import createFetchClient from "openapi-fetch";
import createClient from "openapi-react-query";
import type {paths} from "./schema/generated"; // generated by openapi-typescript
import {CONFIG} from "@/shared/model/config";
import {useSession} from "@/shared/model/session.ts";
import type {ApiSchemas} from "@/shared/api/schema";

export const fetchClient = createFetchClient<paths>({
  baseUrl: CONFIG.API_BASE_URL,
});

export const rqClient = createClient(fetchClient);

export const publicFetchClient = createFetchClient<paths>({
  baseUrl: CONFIG.API_BASE_URL,
});

export const publicRqClient = createClient(publicFetchClient);


fetchClient.use({
  async onRequest({request}) {
    const session = useSession.getState()
    const token = await session.getFreshToken()
    if (token) {
      request.headers.set("Authorization", `Bearer ${token}`);
    } else {
      return new Response(JSON.stringify({
          code: "NOT_AUTHORIZED",
          message: "You are not authorized to access this resource"
        } as ApiSchemas["Error"]),
        {
          status: 401,
          headers: {
            "Content-Type": "application/json",
          },
        })
    }
  }
})